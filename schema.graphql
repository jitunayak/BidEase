schema {
  query: Query
  mutation: Mutation
}

type Advertisement {
  actionUrl: String!
  active: Boolean!
  createdAt: String!
  description: String!
  id: ID!
  imageUrl: String!
  sponsor: String!
  title: String!
  updatedAt: String!
}

type Auction {
  bankId: Int!
  bankName: String!
  basePrice: Float!
  bidCount: Int!
  category: String!
  createdAt: String!
  currentBid: Float
  description: String!
  emd: Float
  endTime: String!
  featured: Boolean!
  id: ID!
  images: [String!]!
  incrementAmount: Float!
  location: String!
  startTime: String!
  startingBid: Float
  status: String!
  title: String!
  updatedAt: String!
  viewCount: Int!
}

input AuctionInput {
  bankId: Int!
  bankName: String!
  basePrice: Float!
  category: String!
  description: String!
  emd: Float
  endTime: String!
  featured: Boolean
  images: [String!]!
  incrementAmount: Float!
  location: String!
  startTime: String!
  startingBid: Float
  status: String!
  title: String!
}

input AuctionUpdateInput {
  bankName: String
  basePrice: Float
  bidCount: Int
  category: String
  currentBid: Float
  description: String
  emd: Float
  endTime: String
  featured: Boolean
  images: [String!]
  incrementAmount: Float
  location: String
  startTime: String
  startingBid: Float
  status: String
  title: String
  viewCount: Int
}

type AuthResponse {
  id: ID!
  token: String!
  user: User
}

type Bank {
  active: Boolean!
  address: String
  contactPerson: String!
  email: String!
  id: ID!
  name: String!
  phone: String!
  subscriptionId: String
}

input BankInput {
  address: String
  contactPerson: String!
  email: String!
  name: String!
  phone: String!
}

input BankUpdateInput {
  address: String
  contactPerson: String
  email: String
  name: String
  phone: String
}

type Banner {
  actionText: String!
  actionUrl: String!
  active: Boolean!
  backgroundColor: String!
  createdAt: String!
  id: ID!
  imageUrl: String!
  subtitle: String!
  textColor: String!
  title: String!
  updatedAt: String!
}

input BannerInput {
  actionText: String!
  actionUrl: String!
  backgroundColor: String!
  imageUrl: String!
  subtitle: String!
  textColor: String!
  title: String!
}

input BannerUpdateInput {
  actionText: String
  actionUrl: String
  backgroundColor: String
  imageUrl: String
  subtitle: String
  textColor: String
  title: String
}

scalar File

scalar JSON

type KYC {
  aadharNumber: String!
  isAadharVerified: Boolean!
  isPanVerified: Boolean!
  panNumber: String!
}

input KYCInput {
  aadharNumber: String
  panNumber: String
}

type Mutation {
  addToWishlist(auctionId: ID!): Wishlist
  createAuction(input: AuctionInput!): Auction!
  createBank(input: BankInput!): Bank!
  createBanner(input: BannerInput!): Banner!
  deleteAuction(id: ID!): Boolean!
  deleteBanner(id: ID!): Boolean!
  deleteNotification(id: ID!): Boolean!
  deleteUser(id: ID!): ID!
  markNotificationAsRead(id: ID!): Notification!
  removeFromWishlist(auctionId: ID!): Boolean
  sendOtp(phoneNumber: String!): String!
  toggleBankStatus(id: ID!): Bank!
  toggleBannerStatus(id: ID!): Banner!
  updateAuction(id: ID!, input: AuctionUpdateInput!): Auction!
  updateBank(id: ID!, input: BankUpdateInput!): Bank!
  updateBanner(id: ID!, input: BannerUpdateInput!): Banner!
  updateUser(id: ID!, input: UserUpdateInput!): User!
  updateUserInterests(id: ID!, interests: [String!]!): User!
  updateUserKYC(id: ID!, input: KYCInput!): User!
  updateUserNotificationPreferences(id: ID!, input: NotificationPreferencesInput!): User!
  uploadAuctionImage(file: File!, id: ID!): String!
  uploadUserImage(file: File!, id: ID!): String!
  verifyOtp(otp: String!, phoneNumber: String!): AuthResponse!
}

type Notification {
  id: ID!
  message: String!
  read: Boolean!
  relatedId: String
  timestamp: String!
  title: String!
  type: String!
  userId: Int!
}

type NotificationPreferences {
  emailNotifications: Boolean!
  pushNotifications: Boolean!
  smsNotifications: Boolean!
}

input NotificationPreferencesInput {
  emailNotifications: Boolean
  pushNotifications: Boolean
  smsNotifications: Boolean
}

type Query {
  advertisement(id: ID!): Advertisement
  advertisements: [Advertisement]
  auction(id: ID!): Auction
  auctions(bidRange: [Float], category: String, featured: Boolean, location: String): [Auction!]!
  bank(id: ID!): Bank
  banks: [Bank!]!
  banner(id: ID!): Banner
  banners: [Banner!]!
  isWishListed(auctionId: ID!): WishlistStatus!
  notifications: [Notification!]!
  user(id: ID!): User
  users: [User!]!
  wishlist: [Wishlist!]!
}

type User {
  email: String!
  id: ID!
  image: String
  kyc: KYC!
  name: String!
  phoneNumber: String
  preferences: UserPreferences!
  role: String!
}

type UserPreferences {
  interests: [String!]!
  notifications: NotificationPreferences!
}

input UserPreferencesInput {
  interests: [String!]
  notifications: NotificationPreferencesInput
}

input UserUpdateInput {
  email: String
  image: String
  kyc: KYCInput
  name: String
  phoneNumber: String
  preferences: UserPreferencesInput
}

type Wishlist {
  auction: Auction!
  createdAt: String!
  id: Int!
}

type WishlistStatus {
  isWishListed: Boolean!
}